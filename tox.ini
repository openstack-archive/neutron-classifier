[tox]
minversion = 1.6
envlist = py35,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install  {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
   OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
   OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
   PYTHONWARNINGS=default::DeprecationWarning
deps =
   -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
   -r{toxinidir}/requirements.txt
   -r{toxinidir}/test-requirements.txt
whitelist_externals =
    sh
    find
commands =
  find . -type f -name "*.py[c|o]" -delete
  find . -type d -name "__pycache__" -delete
  stestr run {posargs}

[testenv:pep8]
commands =
    flake8
# TODO(igordcard): enable pylint on a future patch
#    pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron_classifier}

[testenv:dsvm]
setenv = OS_FAIL_ON_MISSING_DEPS=1
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}

[testenv:functional]
setenv = {[testenv]setenv}
         OS_TEST_TIMEOUT=180
         OS_TEST_PATH=./neutron_classifier/tests/functional
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
deps =
  {[testenv]deps}
  -r{toxinidir}/neutron_classifier/tests/functional/requirements.txt
commands = stestr run {posargs}

[testenv:functional-py35]
basepython = python3.5
setenv = {[testenv]setenv}
         OS_TEST_TIMEOUT=180
         OS_TEST_PATH=./neutron_classifier/tests/functional
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
deps =
  {[testenv]deps}
  -r{toxinidir}/neutron_classifier/tests/functional/requirements.txt
commands = stestr run {posargs}

[testenv:dsvm-functional]
basepython = python2.7
setenv = {[testenv:functional]setenv}
         {[testenv:dsvm]setenv}
sitepackages=True
deps =
  {[testenv:functional]deps}
commands = stestr run {posargs}

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
  PYTHON=coverage run --source neutron_classifier --parallel-mode
commands =
  stestr run '{posargs}'

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:debug]
commands = oslo_debug_helper {posargs}

[flake8]
show-source = True
#ignore =
builtins = _
exclude = ./.*,build,dist
